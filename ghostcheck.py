#!/usr/bin/env python

import datetime
import sys
try:
    from fabric.api import *
except ImportError:
    print 'Fabric was not found. pip install fabric is your friend'
    sys.exit(3)
import os

INVALID = 'SYSTEM ERROR'


@parallel
def _glibify():
    """Get our glibc version"""
    for o in ['/lib/i386-linux-gnu/libc.so.6', '/lib/x86_64-linux-gnu/libc.so.6', '/lib32/libc.so.6', '/usr/lib/x86_64-linux-gnu/libc.so']:
        with hide('output', 'running', 'warnings'), settings(warn_only=True):
            out = run(o).split('\n')
            try:
                header = out[0]
            except:
                return INVALID

            try:
                version = header.split()[9]
                date = out[6].split()[-1][:-1]
            except IndexError:
                return INVALID
            return version, date


def _is_vulnerable(version, date):
    if version == INVALID:
        return False
    _version = version.split('.')
    if _version[0] != 2:
        return False

    if _version[1] < 2 and _version[1] > 18:
        return False

    # https://community.qualys.com/blogs/laws-of-vulnerabilities/2015/01/27/the-ghost-vulnerability
    if _version[1] == 17:
        glibdate = datetime.datetime.strptime(date, '%Y-%m-%d')
        if glibdate >= datetime.datetime.strptime('2013-05-22', '%Y-%m-%d'):
            return False

    return True


def _notify(row):
    print row


@parallel
def go():
    version, date = _glibify()
    vulnerable = _is_vulnerable(version, date)
    row = {'ip': env.host_string, 'glibc_version': version, 'vulnerable': vulnerable}
    _notify(row)
